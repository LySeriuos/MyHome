@using MyHome.Models;
@using MyHome;
@using MyHomeBlazorApp.Pages
@inject BlazorData.DataService DataService

<Modal @ref="refModalReasignDevices" Title="Devices Reassigning">
    <BodyTemplate>
        <div>
            <div class="row">
                <ul>
                    <li>
                        This option will let you move all devices from removed Real Estate to another.
                    </li>
                </ul>
                <p>Choose Real Estate to move your devices:</p>
            </div>
            <div class="row">
                <select class="form-control form-select" @bind="@SelectedRealEstateID">
                    <Button data-toggle="dropdown"></Button>
                    <option selected disabled value="-1">@ChooseOptionValue</option>
                    @foreach (RealEstate r in CurrentUser.RealEstates)
                    {
                        if (r.RealEstateID != CurrentRealEstate.RealEstateID && r.RealEstateID != 0)
                        {
                            <option value="@r.RealEstateID"> @r.RealEstateName </option>
                        }
                        else
                        {
                            continue;
                        }
                    }
                </select>
            </div>
            <div class="row">
                @if (CurrentUser.RealEstates.Count > 1)
                {
                    <Button @onclick="()=>MoveDevicesListToOtherRealEstate(SelectedRealEstateID, CurrentRealEstate)">Move Devices</Button>
                }
                else
                {
                    <Button Disabled>Move Devices</Button>
                }
            </div>
            <br />
            <div class="row">
                <ul>
                    <li>
                        This option will let you leave unassignded devices and move them later to any Real Estate you have.
                    </li>
                </ul>
            </div>
            <div class="row">
                <Button @onclick="()=>LeaveDevicesUnassigned(CurrentRealEstate)">Keep Devices Unassigned</Button>
            </div>
            <br />
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <Button @onclick="OnHideModalReasignDevicesCloseClick">Cancel</Button>
            </div>
        </div>
    </BodyTemplate>
</Modal>

@code {
    [Parameter]
    public int SelectedRealEstateID { get; set; }
    [Parameter]
    public UserProfile? CurrentUser { get; set; }
    [Parameter]
    public RealEstate? CurrentRealEstate { get; set; }

    public Action onDeleteRealEstate;
    public Action onDataChanged;
    private string ChooseOptionValue { get; set; } = "Choose Real Estate";
    public Modal? refModalReasignDevices { get; set; }


    // deleting first before devicesList had been moved
    private async Task MoveDevicesListToOtherRealEstate(int SelectedRealEstateID, RealEstate currentRealEstate)
    {
        if (currentRealEstate != null && SelectedRealEstateID > 0)
        {
            DataService.MoveDeviceListToOtherRealEstate(SelectedRealEstateID, currentRealEstate);            
            onDeleteRealEstate();
            onDataChanged();
        }
        else
        {
            return;
        }
        await OnHideModalReasignDevicesCloseClick();
    }

    private async Task LeaveDevicesUnassigned(RealEstate currentRealEstate)
    {
        if (currentRealEstate != null)
        {
            DataService.LeaveDevicesUnassigned(currentRealEstate);
            
            onDataChanged();
        }
        onDeleteRealEstate();
        await OnHideModalReasignDevicesCloseClick();
    }

    public async Task OnShowModalReasignDevices(int currentRealEstateID)
    {
        await refModalReasignDevices.ShowAsync();
    }

    private async Task OnHideModalReasignDevicesCloseClick()
    {
        await refModalReasignDevices.HideAsync();
    }
}
