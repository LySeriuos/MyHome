@using MyHome.Models;
@using MyHome;
@using MyHomeBlazorApp.Pages
@inject BlazorData.DataService DataService


<Modal @ref="refModalConfirmDeviceDeletion">
    <BodyTemplate>
        <p>Are you sure you want To Delete @CurrentDeviceToDelete.DeviceName?</p>
    </BodyTemplate>
    <FooterTemplate>
        <Button @onclick="()=>DeleteDevice_Click(true)">Delete</Button>
        <Button @onclick="()=>DeleteDevice_Click(false)">Cancel</Button>
    </FooterTemplate>
</Modal>
@code {
    [Parameter]
    public DeviceProfile? CurrentDeviceToDelete { get; set; }
    [Parameter]
    public RealEstate? CurrentRealEstateToDeleteFrom { get; set; }
    [Parameter]
    public IQueryable<DeviceProfile>? _devicesListAsQueryable { get; set; }
    private Modal? refModalConfirmDeviceDeletion { get; set; }
    private String? _deletedDeviceName;
    private DeviceProfile? _deviceToDelete { get; set; }

    public Action onDataChanged;

    private async Task DeleteDevice_Click(bool _confirmDeletion)
    {
        if (_confirmDeletion == true && CurrentDeviceToDelete != null)
        {
            _deviceToDelete = DataService.CurrentUserWithAllData.GetAllDevices().First(d => d.DeviceID == CurrentDeviceToDelete.DeviceID);

            if (_deviceToDelete != null)
            {                
                // // _deletedDeviceName = _deviceToDelete.DeviceName;
                await DataService.RemoveDeviceFromDb(_deviceToDelete);
                onDataChanged();
            }
            else
            {
                return;
            }
        }
        await refModalConfirmDeviceDeletion.HideAsync();
    }
    public async Task OnShowModalClick()
    {
        await refModalConfirmDeviceDeletion.ShowAsync();
    }
}
