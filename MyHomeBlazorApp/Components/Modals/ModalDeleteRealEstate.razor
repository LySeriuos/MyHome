@using MyHome.Models;
@using MyHome;
@using MyHomeBlazorApp.Pages
@inject BlazorData.DataService DataService


<Modal @ref="refModalRealEstateDelete" Title="Delete Confirm">
    <BodyTemplate>
        <p class="text-danger">Attention! If you will delete this RealEsatate it´s devices will be removed too!</p>
        <p>Are you sure you want to delete @CurrentRealEstate.RealEstateName together with Devices?</p>
    </BodyTemplate>
    <FooterTemplate>
        @if (CurrentRealEstate.DevicesProfiles.Count > 0)
        {
            <Button @onclick="()=> CallTheRequest()">Delete Only Real Estate</Button>
            <Button @onclick="()=> DeleteRealEstate_Click(true)">Delete Real Estate With Devices</Button>
        }
        else
        {
        <Button @onclick="()=> DeleteRealEstate_Click(true)">Delete Real Estate</Button>
        }
        <Button @onclick="()=> OnHideModalDeleteRealEstateCloseClick()">Cancel</Button>
    </FooterTemplate>
</Modal>

@code {
    // [Parameter]
    // public ModalReassignDevices? RefModalReassignDevices { get; set; }
    private Modal? refModalRealEstateDelete { get; set; }
    [Parameter]
    public RealEstate? CurrentRealEstate { get; set; }

    public Action onDataChanged;

    public Action<int> onRequestReassignDevicesListToOtherRealEstate;

    private void CallTheRequest()
    {
        onRequestReassignDevicesListToOtherRealEstate(CurrentRealEstate.RealEstateID);
    }
    //TODO this method is called twice, need to check why!
    public async Task DeleteRealEstate_Click(bool _confirmDeletion)
    {
        if (_confirmDeletion == true)
        {
            if (CurrentRealEstate.RealEstateID != 0)
            {
                DataService.RemoveRealEstate(CurrentRealEstate.RealEstateID);                
            }
            else
            {
                throw new ArgumentException("Real Estate doesn't exist!");                
            }
        }        
        await OnHideModalDeleteRealEstateCloseClick();
        CurrentRealEstate = new();
        onDataChanged();
        
    }

    public async Task OnHideModalDeleteRealEstateCloseClick()
    {
        await refModalRealEstateDelete.HideAsync();
    }

    public async Task OnShowModalDeleteRealEstateClick()
    {
        await refModalRealEstateDelete.ShowAsync();
    }
}
