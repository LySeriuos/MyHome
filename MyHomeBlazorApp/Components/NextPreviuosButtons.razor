@using BlazorBootstrap
@inject BlazorData.DataService DataService
@using MyHome.Models


@if (CurrentDevice != null && CurrentDevice.DeviceID != DevicesListAsQueryable.First().DeviceID)
{
    <Button style="margin:5px" Color="ButtonColor.Primary" @onclick="OnModalDevicePreviuos">Previuos</Button>
}

@if (CurrentDevice != null && CurrentDevice.DeviceID != DevicesListAsQueryable.Last().DeviceID)
{
    <Button style="margin:5px" Color="ButtonColor.Primary" @onclick="OnModalDeviceNext">Next</Button>
}

@code{
    [Parameter]
    public IQueryable<DeviceProfile>? DevicesListAsQueryable { get; set; }
    [Parameter]
    public DeviceProfile? CurrentDevice {get;set;}
    [Parameter]
    public EventCallback<DeviceProfile> CurrentDeviceChanged { get; set; }
    private int CurrentDeviceIndex = 0;

    private async Task OnModalDeviceNext()
    {
        if (CurrentDevice != null)
        {
            CurrentDeviceIndex = DevicesListAsQueryable.ToList().IndexOf(CurrentDevice);
            CurrentDevice = DevicesListAsQueryable.ToList()[CurrentDeviceIndex + 1];
            await CurrentDeviceChanged.InvokeAsync(CurrentDevice);
            //one line code with linq
            // CurrentDevice = allDevices[(allDevices.IndexOf(CurrentDevice) + 1) % allDevices.Count];
        }
    }

    private async Task OnModalDevicePreviuos()
    {
        if (CurrentDevice != null)
        {
            CurrentDeviceIndex = DevicesListAsQueryable.ToList().IndexOf(CurrentDevice);
            CurrentDevice = DevicesListAsQueryable.ToList()[CurrentDeviceIndex - 1];
            await CurrentDeviceChanged.InvokeAsync(CurrentDevice);
        }
    }
}