@page "/details"
@using Microsoft.AspNetCore.Components.QuickGrid
@using MyHome.Models;
@using MyHomeBlazorApp.BlazorData;
@using MyHome;
@using MyHomeBlazorApp.Pages

@inject NavigationManager uriHelper;
@inject BlazorData.DataService DataService;


<h3>Details</h3>
@* <Button>Real Estates Details</Button>
<Button>Devices Details</Button>
<Button>Warranties Details</Button>
<Button>Shop Details</Button> *@
<div class="row">
    <div class="col">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Real Estate ID</th>
                    <th scope="col">Real Estate Name</th>
                    <th scope="col">Real Estate Street Name</th>
                    <th scope="col">Real Estate House Number</th>
                    <th scope="col">RealEstate Extended House Number/Letter</th>
                    <th scope="col">Real Estate City</th>
                    <th scope="col">Real Estate Country</th>
                    <th scope="col">Total Devices</th>
                </tr>
            </thead>
            <tbody>
                @foreach (RealEstate r in DataService.RealEstates)
                {
                    <tr>
                        <td>
                            @r.RealEstateID
                        </td>
                        <td>
                            @r.RealEstateName
                        </td>
                        <td>
                            @r.Address.StreetName
                        </td>
                        <td>
                            @r.Address.HouseNumber
                        </td>
                        <td>
                            @r.Address.HouseNumberExtension
                        </td>
                        <td>
                            @r.Address.City
                        </td>
                        <td>
                            @r.Address.Country
                        </td>
                        <td>
                            @DataService.Devices.Count
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row">
    <div class="col">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Real Estate ID</th>
                    <th scope="col">Device ID</th>
                    <th scope="col">Device Name</th>
                    <th scope="col">Device Produser</th>
                    <th scope="col">Device Type</th>
                    <th scope="col">Device Serial Number</th>
                    <th scope="col">Device Model Number</th>
                    <th scope="col">Device IP Adrress</th>
                    <th scope="col">Device MAC Adrress</th>
                    <th scope="col">Device Link To Manual</th>
                    <th scope="col">Device Warranty Expires</th>
                </tr>
            </thead>
            <tbody>
                @foreach (RealEstate r in DataService.RealEstates)
                {
                    @foreach (DeviceProfile d in DataService.Devices)
                    {
                        <tr>
                            <td>
                                @r.RealEstateID
                            </td>
                            <td>
                                @d.DeviceID
                            </td>
                            <td>
                                @d.DeviceName
                            </td>
                            <td>
                                @d.DeviceProduser
                            </td>
                            <td>
                                @d.DeviceType
                            </td>
                            <td>
                                @d.DeviceSerialNumber
                            </td>
                            <td>
                                @d.DeviceModelNumber
                            </td>
                            <td>
                                @d.IpAddress
                            </td>
                            <td>
                                @d.MacAdrress
                            </td>
                            <td>

                            </td>
                            <td>
                                @d.DeviceWarranty.WarrantyEnd.ToShortDateString()
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Real Estate ID</th>
                    <th scope="col">Device ID</th>
                    <th scope="col">Purchase Date</th>
                    <th scope="col">Warranty Length In Days</th>
                    <th scope="col">Link to Receipt</th>
                    <th scope="col">Extra Warranty/Insurance Length In Days</th>
                    <th scope="col">Link To Extra Warranty/Insurance Reciept</th>
                    <th scope="col">Warranty Ends</th>
                </tr>
            </thead>
            <tbody>
                @foreach (RealEstate r in DataService.RealEstates)
                {
                    @foreach (DeviceProfile d in DataService.Devices)
                    {
                        <tr>
                            <td>
                                @r.RealEstateID
                            </td>
                            <td>
                                @d.DeviceID
                            </td>
                            <td>
                                @d.DeviceWarranty.PurchaseDate.ToShortDateString()
                            </td>
                            <td>
                                @d.DeviceWarranty.WarrantyPeriod.TotalDays
                            </td>
                            <td>
                                @d.DeviceWarranty.ReceiptLink
                            </td>
                            @if (@d.DeviceWarranty.ExtraInsuranceWarrantyLenght.TotalDays == 0)
                            {
                        // there should be a button
                                <td>
                                    There was no extra warranty or insurance added!
                                </td>
                            }
                            else
                            {
                                <td>
                                    @d.DeviceWarranty.ExtraInsuranceWarrantyLenght.TotalDays
                                </td>
                            }
                            @* here should be if statement to check if there was added extra insurance and if yes so provide link to reciept or add button to add link/uppload to insurance *@
                            <td>
                                @d.DeviceWarranty.ExtraInsuranceWarrantyLink
                            </td>
                            <td>
                                @d.DeviceWarranty.WarrantyEnd.ToShortDateString()
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col">
        <table class="table table-striped table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Real Estate ID</th>
                    <th scope="col">Device ID</th>
                    <th scope="col">Shop Name</th>
                    <th scope="col">Shop Website Adrress</th>
                    <th scope="col">Shop Phone Number</th>
                    <th scope="col">Shop Street Name</th>
                    <th scope="col">Shop House Number</th>
                    <th scope="col">Shop Extended House Number/Letter</th>
                    <th scope="col">Shop City</th>
                    <th scope="col">Shop Country</th>

                </tr>
            </thead>
            <tbody>
                @foreach (RealEstate r in DataService.RealEstates)
                {
                    @foreach (DeviceProfile d in DataService.Devices)
                    {
                        <tr>
                            <td>
                                @r.RealEstateID
                            </td>
                            <td>
                                @d.DeviceID
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.ShopName
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.ShopWebAddress
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.PhoneNumber
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.Address.StreetName
                            </td>

                            @* here should be if statement to check if there was added extra insurance and if yes so provide link to reciept or add button to add link/uppload to insurance *@
                            <td>
                                @d.DeviceWarranty.Shop.Address.HouseNumber
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.Address.HouseNumberExtension
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.Address.City
                            </td>
                            <td>
                                @d.DeviceWarranty.Shop.Address.Country
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row">
    <div class="col">
        <Button>Real Estates Details</Button>
        <Button>Devices Details</Button>
        <Button>Warranties Details</Button>
        <Button>Shops Details</Button>
    </div>
</div>
<div class="row">
    <QuickGrid Items="@DataService.RealEstates.AsQueryable()">
        @* Here is "edit" button, but there are two different forms: Real Estate and Address. For logic reason these two should be combined as one editable form*@
        <TemplateColumn>
            <div>
                <Button>Edit</Button>
                <Button>Delete</Button>
            </div>
        </TemplateColumn>
        <PropertyColumn Title="Real Estate ID" Property="@(r => r.RealEstateID)" Sortable="true" />
        <PropertyColumn Title="Real Estate Name" Property="@(r => r.RealEstateName)" Sortable="true" />
        <PropertyColumn Title="Street Name" Property="@(r => r.Address.StreetName)" Sortable="true" />
        <PropertyColumn Title="House Number" Property="@(r => r.Address.HouseNumber)" Sortable="true" />
        @foreach (RealEstate r in DataService.RealEstates)
        {
            if (r.Address.HouseNumberExtension == null)
            {
                <TemplateColumn Title="House Number Extension">
                    <div>
                        <span>No Data</span>
                    </div>
                </TemplateColumn>
            }
            else
            {
                <PropertyColumn Title="House Number Extension" Property="@(r => r.Address.HouseNumberExtension)" Sortable="true" />
            }
        }
        <PropertyColumn Property="@(r => r.Address.City)" Sortable="true" />
        <PropertyColumn Property="@(r => r.Address.Country)" Sortable="true" />
        <PropertyColumn Title="Total Devices" Property="@(r => r.DevicesProfiles.Count())" />
    </QuickGrid>
</div>
<div class="row">
    @foreach (RealEstate r in DataService.RealEstates)
    {
        <QuickGrid Items="@DataService.Devices.AsQueryable()">

            @* Here is "edit" button, but there are two different forms: Real Estate and Address. For logic reason these two should be combined as one editable form*@
            <TemplateColumn>
                <div>
                    <Button>Edit</Button>
                    <Button>Delete</Button>
                </div>
            </TemplateColumn>
            <TemplateColumn Title="RealEstateID">
                <span>@r.RealEstateID</span>
            </TemplateColumn>
            @* how to make output "no data" if user didn't put in details for alomst each part. Some will be   *@
            <PropertyColumn Title="Device ID" Property="@(d => d.DeviceID)" Sortable="true" />
            <PropertyColumn Title="Device Name" Property="@(d => d.DeviceName)" Sortable="true" />
            <PropertyColumn Title="Device Produser" Property="@(d => d.DeviceProduser)" Sortable="true" />
            <PropertyColumn Title="Device Type" Property="@(d => d.DeviceType)" Sortable="true" />
            <PropertyColumn Title="Device Serial Number" Property="@(d => d.DeviceSerialNumber)" Sortable="true" />
            <PropertyColumn Title="Devcice Model Number" Property="@(d => d.DeviceModelNumber)" Sortable="true" />
            <PropertyColumn Title="Ip Adrress" Property="@(d => d.IpAddress)" Sortable="true" />
            <PropertyColumn Title="Mac Adrress" Property="@(d => d.MacAdrress)" Sortable="true" />
                @* link to manual is not clickable, need to fix it! *@
            <PropertyColumn Title="Link To Manual" Property="@(d => d.ManualBookLink)" Sortable="true" />
            <PropertyColumn Title="Warranty Expires" Property="@(d => d.DeviceWarranty.WarrantyEnd.ToShortDateString())" Sortable="true" />
        </QuickGrid>
    }
</div>
<div class="row">
    @foreach (RealEstate r in DataService.RealEstates)
    {
        <QuickGrid Items="@DataService.Devices.AsQueryable()">

            @* Here is "edit" button, but there are two different forms: Real Estate and Address. For logic reason these two should be combined as one editable form*@
            <TemplateColumn>
                <div>
                    <Button>Edit</Button>
                    <Button>Delete</Button>
                </div>
            </TemplateColumn>
            <TemplateColumn Title="RealEstateID">
                <span>@r.RealEstateID</span>
            </TemplateColumn>
            @* how to make output "no data" if user didn't put in details for alomst each part. Some will be *@
            <PropertyColumn Title="Device ID" Property="@(d => d.DeviceID)" Sortable="true" />
            <PropertyColumn Title="Purchase Date" Property="@(d => d.DeviceWarranty.PurchaseDate.ToShortDateString())" Sortable="true" />
            <PropertyColumn Title="Warranty Expires" Property="@(d => d.DeviceWarranty.WarrantyEnd.ToShortDateString())" Sortable="true" />
            <PropertyColumn Title="Warranty Length (Days)" Property="@(d => d.DeviceWarranty.WarrantyPeriod.TotalDays)" />
                @* it would be great for user to uppload the receipts or insurances to database to make it easy to find! Other method it could be linked in the user device *@
            <PropertyColumn Title="Receipt Link" Property="@(d => d.DeviceWarranty.ReceiptLink)" />
            <PropertyColumn Title="Extra Warranty/Insurance Length (Days)" Property="@(d => d.DeviceWarranty.ExtraInsuranceWarrantyLenght.TotalDays)" Sortable="true" />
            <PropertyColumn Title="Extra Warranty/Insurance Reciept Link" Property="@(d => d.DeviceWarranty.ExtraInsuranceWarrantyLink)" />            
        </QuickGrid>
    }
</div>
<div class="row">
    @foreach (RealEstate r in DataService.RealEstates)
    {
        <QuickGrid Items="@DataService.Devices.AsQueryable()">

            @* Here is "edit" button, but there are two different forms: Real Estate and Address. For logic reason these two should be combined as one editable form*@
            <TemplateColumn>
                <div>
                    <Button>Edit</Button>
                    <Button>Delete</Button>
                </div>
            </TemplateColumn>
            <TemplateColumn Title="RealEstateID">
                <span>@r.RealEstateID</span>
            </TemplateColumn>
            @* how to make output "no data" if user didn't put in details for alomst each part. Some will be *@
            <PropertyColumn Title="Device ID" Property="@(d => d.DeviceID)" Sortable="true" />
            <PropertyColumn Title="Shop Name" Property="@(d => d.DeviceWarranty.Shop.ShopName)" Sortable="true" />
            <PropertyColumn Title="Website Adrress" Property="@(d => d.DeviceWarranty.Shop.ShopWebAddress)" Sortable="true" />
            <PropertyColumn Title="Phone Number" Property="@(d => d.DeviceWarranty.Shop.PhoneNumber)" />            
            <PropertyColumn Title="Street Name" Property="@(d => d.DeviceWarranty.Shop.Address.StreetName)" />
            <PropertyColumn Title="House Number" Property="@(d => d.DeviceWarranty.Shop.Address.HouseNumber)" />
            <PropertyColumn Title="Extended House Number/Letter" Property="@(d => d.DeviceWarranty.Shop.Address.HouseNumberExtension)" />
            <PropertyColumn Title="City" Property="@(d => d.DeviceWarranty.Shop.Address.City)" Sortable="true" />
            <PropertyColumn Title="Country" Property="@(d => d.DeviceWarranty.Shop.Address.Country)" Sortable="true" />
        </QuickGrid>
    }
</div>


@code {


}
