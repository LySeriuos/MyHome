@inject UserManager<MyHomeBlazorAppUser> UserManager
@inject SignInManager<MyHomeBlazorAppUser> SignInManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@using Microsoft.AspNetCore.Components.Authorization;
@using MyHomeBlazorApp.BlazorData


@page "/superdanger"
<h3>danger</h3>
<AuthorizeView>
    <Authorized>
        <Button @onclick="MakeCurrentAdmin">Dont click</Button>
    </Authorized>
    <NotAuthorized>
        <p>You're not authorized.</p>
    </NotAuthorized>
</AuthorizeView>

@* //make current user admin  *@
@code {
    private async Task MakeCurrentAdmin()
    {
        //code to make someone as first admin
        var AuthSate = GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = AuthSate.Result.User;

        if (user.Identity.IsAuthenticated)
        {
            _currentUser = await UserManager.GetUserAsync(user);
            _userEmail = await SignInManager.UserManager.GetEmailAsync(_currentUser);
            var userRoles = await UserManager.GetRolesAsync(_currentUser);
            if(userRoles.Count > 1)
            {
                await UserManager.RemoveFromRoleAsync(_currentUser, "User");
            }
            _userIsInRole = await SignInManager.UserManager.IsInRoleAsync(_currentUser, "Admin");
        }

        if (_userEmail.ToLower() == _adminEmail && _userIsInRole == false)
        {            
            await UserManager.AddToRoleAsync(_currentUser, "Admin");
            await UserManager.RemoveFromRoleAsync(_currentUser, "User");            
        }
        await UserManager.UpdateAsync(_currentUser);
    }

    private MyHomeBlazorAppUser? _currentUser { get; set; }
    private MyHomeBlazorAppUser? _firstAdminUser { get; set; }
    private string? _userEmail { get; set; }
    private string? Error { get; set; }
    private readonly string? _adminEmail = "qqq@gmail.com";
    private bool _userIsInRole = false;
    private bool _randomBool = true;
    protected override void OnParametersSet()
    {
        //prevent non devs from accessing the site lol
        if (_randomBool)
            throw new Exception();
        ;
    }
}
