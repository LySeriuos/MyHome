@page "/mdetails" 
@page "/mdetails/{userID}/{deviceID}"
@* TODO Match routing urls with file names or be sad *@

@using MyHome.Models;
@using MyHome;
@using MyHomeBlazorApp.Components.Modals
@using MyHomeBlazorApp.Pages
@inject BlazorData.DataService DataService

<h3>MobileDeviceInfo</h3>

<EditFormDeviceDetails CurrentDevice="@CurrentDevice"
                    CurrentUser="@_userProfile"
                    RealEsatateIdToAddDevice="@currentRealEstate.RealEstateID">
</EditFormDeviceDetails>


@code {
    [Parameter]
    public string deviceID { get; set; }
    [Parameter]
    public string userID { get; set; }
    [Parameter]
    public UserProfile _userProfile { get; set; }
    private DeviceProfile? _chosedDeviceProfile { get; set; }
    [Parameter]
    public DeviceProfile? CurrentDevice { get; set; }
    [Parameter]
    public RealEstate currentRealEstate { get; set; } = new();
    private ModalEditAddDevice? refModalEditAddDevice = default!;
    private bool disabled;
    IQueryable<DeviceProfile> _devicesListAsQueryable;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if(CurrentDevice != null)
            {
                refModalEditAddDevice.OnShowModalEditDeviceClick();

            }
            refModalEditAddDevice.changedDeviceListData += DeviceListDataHasChanged;
        }
        base.OnAfterRender(firstRender);
    }

    private void DeviceListDataHasChanged()
    {
        _devicesListAsQueryable = DataService.CurrentUser.RealEstates.SelectMany(realEstate => realEstate.DevicesProfiles).AsQueryable();
        StateHasChanged();
    }

    private async Task OnShowModalAddNewDevice(UserProfile userProfile, int deviceIDNotString)
    {
        currentRealEstate.RealEstateID = DataService.GetRealEstateByDeviceID(deviceIDNotString);
        CurrentDevice = userProfile.GetAllDevices().FirstOrDefault(d => d.DeviceID == deviceIDNotString);        
        
    }
    protected override async Task OnParametersSetAsync()
    {
        int userIDNoString = Int32.Parse(userID);
        if (userID != String.Empty)
        {            
            _userProfile = DataService.GetUser(userIDNoString);
        }
        int deviceIDNotString = Int32.Parse(deviceID);
        if (deviceID != String.Empty)
        {
            await OnShowModalAddNewDevice(_userProfile, deviceIDNotString);
        }
    }
}
