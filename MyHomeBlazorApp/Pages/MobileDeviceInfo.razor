@page "/mdetails"
@page "/mdetails/{userID:int}/{deviceID:int}"


@using MyHome.Models;
@using MyHome;
@using MyHomeBlazorApp.Components.Modals
@using MyHomeBlazorApp.Pages
@inject BlazorData.DataService DataService

<h3>MobileDeviceInfo</h3>

@* <ModalEditAddDevice @ref="refModalEditAddDevice" CurrentDevice="@CurrentDevice"
                    CurrentUser="@_userProfile"
                    RealEsatateIdToAddDevice="@currentRealEstate.RealEstateID"
                    Fullscreen="ModalFullscreen.Always">
</ModalEditAddDevice> *@
<EditDeviceFormTest CurrentDevice="CurrentDeviceTest"
    CurrentUser="_userProfile">
</EditDeviceFormTest>


@code {
    [Parameter]
    public int deviceID { get; 
        set; }
    [Parameter]
    public int userID { get; set; }
    [Parameter]
    public UserProfile _userProfile { get; set; }
    private DeviceProfile? _chosedDeviceProfile { get; set; }
    [Parameter]
    public DeviceProfile? CurrentDevice { get; set; }
    [CascadingParameter]
    public DeviceProfile CurrentDeviceTest { get; set; }

    // protected override void OnAfterRender(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         _userProfile = DataService.Users.First(d => d.UserID == userID);
    //         CurrentDevice = _userProfile.GetAllDevices().First(d => d.DeviceID == deviceID);
    //         CurrentDeviceTest = _userProfile.GetAllDevices().First(d => d.DeviceID == deviceID);
    //     }
    //     base.OnAfterRender(firstRender);
    // }

    protected override void OnInitialized()
    {
        _userProfile = DataService.Users.First(d => d.UserID == userID);
        CurrentDevice = _userProfile.GetAllDevices().First(d => d.DeviceID == deviceID);
        CurrentDeviceTest = _userProfile.GetAllDevices().First(d => d.DeviceID == deviceID);
        base.OnInitialized();
    }


    // protected override void OnAfterRender(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         if (CurrentDevice != null)
    //         {
    //             refModalEditAddDevice.OnShowModalEditDeviceClick();

    //         }
    //         refModalEditAddDevice.changedDeviceListData += DeviceListDataHasChanged;
    //     }
    //     base.OnAfterRender(firstRender);
    // }

    // private void DeviceListDataHasChanged()
    // {
    //     _devicesListAsQueryable = DataService.CurrentUser.RealEstates.SelectMany(realEstate => realEstate.DevicesProfiles).AsQueryable();
    //     StateHasChanged();
    // }

    // private async Task OnShowModalAddNewDevice(UserProfile userProfile, int deviceIDNotString)
    // {
    //     currentRealEstate.RealEstateID = DataService.GetRealEstateByDeviceID(deviceIDNotString);
    //     CurrentDevice = userProfile.GetAllDevices().FirstOrDefault(d => d.DeviceID == deviceIDNotString);

    // }
    // protected override async Task OnParametersSetAsync()
    // {
    //     int userIDNoString = Int32.Parse(userID);
    //     if (userID != String.Empty)
    //     {
    //         _userProfile = DataService.GetUser(userIDNoString);
    //     }
    //     int deviceIDNotString = Int32.Parse(deviceID);
    //     if (deviceID != String.Empty)
    //     {
    //         await OnShowModalAddNewDevice(_userProfile, deviceIDNotString);
    //     }
    // }
}
